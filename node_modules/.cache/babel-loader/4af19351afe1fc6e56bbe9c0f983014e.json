{"ast":null,"code":"var _jsxFileName = \"/home/pantis/Documents/webystall/src/components/DataPoints.js\",\n    _s = $RefreshSig$();\n\nimport './DataPoints.css';\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DataPoints = _ref => {\n  _s();\n\n  let {\n    order,\n    angleRotatedData,\n    typeOfDataRotation,\n    setOrder,\n    atoms,\n    species,\n    state,\n    selectedPoint,\n    removedData,\n    dataX,\n    dataY,\n    dataZ,\n    allMultiSpec,\n    dataClicked,\n    onRemoveData,\n    onAddData\n  } = _ref;\n  let rowsForTable = [];\n  const [finalRows, setFinalRows] = useState(rowsForTable);\n\n  for (let i = 0; i < dataX.length; i++) {\n    rowsForTable = [...rowsForTable, [[allMultiSpec[i], dataX[i], dataY[i], dataZ[i]], i]];\n  }\n\n  const orderChanger = e => {\n    let value = e.target.value.split(';');\n    let values = [];\n\n    for (let i = 0; i < value.length; i++) {\n      values = [...values, parseInt(value[i])];\n    }\n\n    if (values.length === 4 && !values.includes(NaN)) {\n      setOrder(value.join(';'));\n    }\n  };\n\n  useEffect(() => {\n    let sorted = rowsForTable.sort((a, b) => {\n      let numbers = order.split(';').map(element => parseInt(element) - 1);\n\n      if (a[0][numbers[0]] === b[0][numbers[0]]) {\n        if (a[0][numbers[1]] === b[0][numbers[1]]) {\n          if (a[0][numbers[2]] === b[0][numbers[2]]) {\n            if (a[0][numbers[3]] === b[0][numbers[3]]) {\n              return a[0][numbers[3]] - b[0][numbers[3]];\n            } else {\n              return a[0][numbers[3]] - b[0][numbers[3]];\n            }\n          } else {\n            return a[0][numbers[2]] - b[0][numbers[2]];\n          }\n        } else {\n          return a[0][numbers[1]] - b[0][numbers[1]];\n        }\n      } else {\n        return a[0][numbers[0]] - b[0][numbers[0]];\n      }\n    });\n    setFinalRows(sorted);\n  }, [order, angleRotatedData, typeOfDataRotation]);\n\n  const downloadFiles = (filename, text) => {\n    var element = document.createElement('a');\n    element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\n    element.setAttribute('download', filename);\n    element.style.display = 'none';\n    document.body.appendChild(element);\n    element.click();\n    document.body.removeChild(element);\n  };\n\n  const downloadSpecies = e => {\n    let txt = '# Thank you for using webystal. Your data is ready to be inserted into the fdf file\\n\\n';\n    txt = txt + `NumberOfSpecies ${species.length}\\nNumberOfAtoms ${finalRows.length - removedData.length} \\n\\n%block ChemicalSpeciesLabel\\n`;\n\n    for (let i = 0; i < species.length; i++) {\n      txt = txt + `${i + 1}  ${species[i]}  ${atoms[species[i] - 1]} \\n`;\n    }\n\n    txt = txt + '%endblock ChemicalSpeciesLabel\\n\\nAtomicCoordinatesFormat Ang\\n%block LatticeVectors\\n';\n    let lattice = [state.constantX[0], state.constantY[0], state.constantZ[0]];\n    let multipliers = [state.repetitionX[0], state.repetitionY[0], state.repetitionZ[0]];\n\n    for (let i = 0; i < lattice.length; i++) {\n      let xThisRow = lattice[i][0] * multipliers[i] >= 0 ? (lattice[i][0] * multipliers[i]).toFixed(9) : (lattice[i][0] * multipliers[i]).toFixed(8);\n      let yThisRow = lattice[i][1] * multipliers[i] >= 0 ? (lattice[i][1] * multipliers[i]).toFixed(9) : (lattice[i][1] * multipliers[i]).toFixed(8);\n      let zThisRow = lattice[i][2] * multipliers[i] >= 0 ? (lattice[i][2] * multipliers[i]).toFixed(9) : (lattice[i][2] * multipliers[i]).toFixed(8);\n      let row = ` ${xThisRow}  ${yThisRow}  ${zThisRow}\\n`;\n      txt = txt + row;\n    }\n\n    txt = txt + `%endblock LatticeVectors\\n\\n`;\n    txt = txt + '%block AtomicCoordinatesAndAtomicSpecies\\n';\n\n    for (let i = 0; i < finalRows.length; i++) {\n      let siestaSpecies = species.indexOf(finalRows[i][0][0]) + 1;\n\n      if (removedData.includes(finalRows[i][1])) {\n        continue;\n      } else {\n        let dataXHere = finalRows[i][0][1] >= 0 ? finalRows[i][0][1].toFixed(9) : finalRows[i][0][1].toFixed(8);\n        let dataYHere = finalRows[i][0][2] >= 0 ? finalRows[i][0][2].toFixed(9) : finalRows[i][0][2].toFixed(8);\n        let dataZHere = finalRows[i][0][3] >= 0 ? finalRows[i][0][3].toFixed(9) : finalRows[i][0][3].toFixed(8);\n        let row = `  ${dataXHere}        ${dataYHere}        ${dataZHere}        ${siestaSpecies}\\n`;\n        txt = txt + row;\n      }\n    }\n\n    txt = txt + '%endblock AtomicCoordinatesAndAtomicSpecies';\n    downloadFiles('WebyStyle.dat', txt);\n  };\n\n  const downloadXSF = e => {\n    let txt = ' # crystal structure from Webystal\\n CRYSTAL\\n # Cell vectors in Angstroem:\\n PRIMVEC\\n';\n    let lattice = [state.constantX[0], state.constantY[0], state.constantZ[0]];\n    let multipliers = [state.repetitionX[0], state.repetitionY[0], state.repetitionZ[0]];\n\n    for (let i = 0; i < lattice.length; i++) {\n      let thisX = lattice[i][0] * multipliers[i] >= 0 ? (lattice[i][0] * multipliers[i]).toFixed(9) : (lattice[i][0] * multipliers[i]).toFixed(8);\n      let thisY = lattice[i][1] * multipliers[i] >= 0 ? (lattice[i][1] * multipliers[i]).toFixed(9) : (lattice[i][1] * multipliers[i]).toFixed(8);\n      let thisZ = lattice[i][2] * multipliers[i] >= 0 ? (lattice[i][2] * multipliers[i]).toFixed(9) : (lattice[i][2] * multipliers[i]).toFixed(8);\n      let row = `  ${thisX}  ${thisY}  ${thisZ}\\n`;\n      txt = txt + row;\n    }\n\n    txt = txt + ' # Atom coordinates in Angstroem:\\n PRIMCOORD\\n';\n    txt = txt + `    ${finalRows.length - removedData.length}    1\\n`;\n\n    for (let i = 0; i < finalRows.length; i++) {\n      if (removedData.includes(finalRows[i][1])) {\n        continue;\n      } else {\n        let row = `  ${finalRows[i][0][0]}        ${finalRows[i][0][1].toFixed(8)}        ${finalRows[i][0][2].toFixed(8)}        ${finalRows[i][0][3].toFixed(8)}\\n`;\n        txt = txt + row;\n      }\n    }\n\n    downloadFiles('WebyStyle.XSF', txt);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tableDiv\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"aboveTable\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tableTitle\",\n        children: \"Data Table\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"sort\",\n          children: \"Sort:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          defaultValue: order,\n          className: \"sortInput\",\n          onChange: e => orderChanger(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Atomic Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"X - Coordinate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Y - Coordinate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Z - Coordinate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Delete \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \" Add Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: finalRows.map((element, indElem) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [element[0].map((val, indVal) => /*#__PURE__*/_jsxDEV(\"td\", {\n            className: selectedPoint === element[1] ? 'focusedData' : removedData.includes(element[1]) ? 'redSelected' : '',\n            onClick: numberData => dataClicked(element[1]),\n            children: indVal === 0 ? val : val.toFixed(10)\n          }, indVal, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 25\n          }, this)), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: selectedPoint === element[1] ? 'focusedData' : removedData.includes(element[1]) ? 'redSelected' : '',\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              name: `${element[1]}`,\n              className: \"remove\",\n              onClick: onRemoveData,\n              children: \"Remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: selectedPoint === element[1] ? 'focusedData' : removedData.includes(element[1]) ? 'redSelected' : '',\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              name: `${element[1]}`,\n              className: \"add\",\n              onClick: onAddData,\n              children: \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 21\n          }, this)]\n        }, indElem, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"download\",\n      onClick: downloadXSF,\n      children: \"Download XSF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"download\",\n      onClick: downloadSpecies,\n      children: \"Download Species\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DataPoints, \"YnBuRtjtkcJKJdsw57Iwu+mOIEs=\");\n\n_c = DataPoints;\nexport default DataPoints;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataPoints\");","map":{"version":3,"sources":["/home/pantis/Documents/webystall/src/components/DataPoints.js"],"names":["React","useEffect","useState","DataPoints","order","angleRotatedData","typeOfDataRotation","setOrder","atoms","species","state","selectedPoint","removedData","dataX","dataY","dataZ","allMultiSpec","dataClicked","onRemoveData","onAddData","rowsForTable","finalRows","setFinalRows","i","length","orderChanger","e","value","target","split","values","parseInt","includes","NaN","join","sorted","sort","a","b","numbers","map","element","downloadFiles","filename","text","document","createElement","setAttribute","encodeURIComponent","style","display","body","appendChild","click","removeChild","downloadSpecies","txt","lattice","constantX","constantY","constantZ","multipliers","repetitionX","repetitionY","repetitionZ","xThisRow","toFixed","yThisRow","zThisRow","row","siestaSpecies","indexOf","dataXHere","dataYHere","dataZHere","downloadXSF","thisX","thisY","thisZ","indElem","val","indVal","numberData"],"mappings":"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","sourcesContent":["import './DataPoints.css';\nimport React, { useEffect, useState } from 'react'\n\nconst DataPoints = ( {order,angleRotatedData,typeOfDataRotation,setOrder,atoms,species, state, selectedPoint,removedData,dataX,dataY,dataZ,allMultiSpec, dataClicked,onRemoveData, onAddData} ) => {\n    let rowsForTable = []\n    const [finalRows, setFinalRows] = useState(rowsForTable)\n    for(let i = 0; i< dataX.length;i++){\n        rowsForTable = [...rowsForTable,[[allMultiSpec[i],dataX[i],dataY[i],dataZ[i]],i]]\n    }\n    const orderChanger = (e) => {\n        let value = e.target.value.split(';')\n        let values = []\n        for(let i = 0; i< value.length; i++){\n            values = [...values, parseInt(value[i])]\n        }\n        if(values.length === 4 && !values.includes(NaN)){\n            setOrder(value.join(';'))\n        }\n    }\n    useEffect(() => {\n     let sorted = rowsForTable.sort((a, b) => {\n        let numbers = order.split(';').map((element) => (parseInt(element)-1))\n        if (a[0][numbers[0]] === b[0][numbers[0]]) {\n            if (a[0][numbers[1]] === b[0][numbers[1]]) {\n                if (a[0][numbers[2]] === b[0][numbers[2]]) {\n                    if (a[0][numbers[3]] === b[0][numbers[3]]) {\n                        return a[0][numbers[3]] - b[0][numbers[3]];\n                    } else {\n                        return a[0][numbers[3]] - b[0][numbers[3]];\n                    }\n                } else {\n                    return a[0][numbers[2]] - b[0][numbers[2]];\n                }\n            } else {\n                return a[0][numbers[1]] - b[0][numbers[1]];\n            }\n        } else {\n          return a[0][numbers[0]] - b[0][numbers[0]];\n        }\n      });\n      setFinalRows(sorted)\n\n    }, [order,angleRotatedData,typeOfDataRotation])\n     \n      const downloadFiles = (filename, text) => {\n        var element = document.createElement('a');\n        element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\n        element.setAttribute('download', filename);\n\n        element.style.display = 'none';\n        document.body.appendChild(element);\n\n        element.click();\n\n        document.body.removeChild(element);\n        }\n        \n        const downloadSpecies = (e) => {\n            let txt = '# Thank you for using webystal. Your data is ready to be inserted into the fdf file\\n\\n'\n            txt = txt + `NumberOfSpecies ${species.length}\\nNumberOfAtoms ${finalRows.length-removedData.length} \\n\\n%block ChemicalSpeciesLabel\\n`\n            for(let i = 0; i<species.length; i++){\n                txt = txt+ `${i+1}  ${species[i]}  ${atoms[species[i]-1]} \\n`\n            }\n            txt = txt+ '%endblock ChemicalSpeciesLabel\\n\\nAtomicCoordinatesFormat Ang\\n%block LatticeVectors\\n'\n            let lattice = [state.constantX[0],state.constantY[0],state.constantZ[0]]\n            let multipliers = [state.repetitionX[0],state.repetitionY[0],state.repetitionZ[0]]\n            for(let i =0; i< lattice.length;i++){\n                let xThisRow = lattice[i][0]*multipliers[i]>=0?(lattice[i][0]*multipliers[i]).toFixed(9):(lattice[i][0]*multipliers[i]).toFixed(8)\n                let yThisRow = lattice[i][1]*multipliers[i]>=0?(lattice[i][1]*multipliers[i]).toFixed(9):(lattice[i][1]*multipliers[i]).toFixed(8)\n                let zThisRow = lattice[i][2]*multipliers[i]>=0?(lattice[i][2]*multipliers[i]).toFixed(9):(lattice[i][2]*multipliers[i]).toFixed(8)\n                let row = ` ${xThisRow}  ${yThisRow}  ${zThisRow}\\n`\n                txt = txt + row\n            }\n            txt = txt +`%endblock LatticeVectors\\n\\n`\n            txt = txt+ '%block AtomicCoordinatesAndAtomicSpecies\\n'\n            for(let i =0; i< finalRows.length;i++){\n                let siestaSpecies = species.indexOf(finalRows[i][0][0])+1\n                if(removedData.includes(finalRows[i][1])){\n                    continue\n                } else {\n                    let dataXHere = finalRows[i][0][1]>=0?finalRows[i][0][1].toFixed(9):finalRows[i][0][1].toFixed(8)\n                    let dataYHere = finalRows[i][0][2]>=0?finalRows[i][0][2].toFixed(9):finalRows[i][0][2].toFixed(8)\n                    let dataZHere = finalRows[i][0][3]>=0?finalRows[i][0][3].toFixed(9):finalRows[i][0][3].toFixed(8)\n                    let row = `  ${dataXHere}        ${dataYHere}        ${dataZHere}        ${siestaSpecies}\\n`\n                    txt = txt + row\n                }\n            }\n            txt = txt + '%endblock AtomicCoordinatesAndAtomicSpecies'\n            downloadFiles('WebyStyle.dat',txt)\n          }\n\n      const downloadXSF = (e) => {\n        let txt = ' # crystal structure from Webystal\\n CRYSTAL\\n # Cell vectors in Angstroem:\\n PRIMVEC\\n'\n        let lattice = [state.constantX[0],state.constantY[0],state.constantZ[0]]\n        let multipliers = [state.repetitionX[0],state.repetitionY[0],state.repetitionZ[0]]\n        for(let i =0; i< lattice.length;i++){\n            let thisX = lattice[i][0]*multipliers[i]>=0?(lattice[i][0]*multipliers[i]).toFixed(9):(lattice[i][0]*multipliers[i]).toFixed(8)\n            let thisY = lattice[i][1]*multipliers[i]>=0?(lattice[i][1]*multipliers[i]).toFixed(9):(lattice[i][1]*multipliers[i]).toFixed(8)\n            let thisZ = lattice[i][2]*multipliers[i]>=0?(lattice[i][2]*multipliers[i]).toFixed(9):(lattice[i][2]*multipliers[i]).toFixed(8)\n            let row = `  ${thisX}  ${thisY}  ${thisZ}\\n`\n            txt = txt + row\n        }\n        txt = txt + ' # Atom coordinates in Angstroem:\\n PRIMCOORD\\n'\n        txt = txt +`    ${finalRows.length-removedData.length}    1\\n`\n        for(let i =0; i< finalRows.length;i++){\n            if(removedData.includes(finalRows[i][1])){\n                continue\n            } else {\n                let row = `  ${finalRows[i][0][0]}        ${finalRows[i][0][1].toFixed(8)}        ${finalRows[i][0][2].toFixed(8)}        ${finalRows[i][0][3].toFixed(8)}\\n`\n                txt = txt + row\n            }\n        }\n        downloadFiles('WebyStyle.XSF',txt)\n      }\n  return (\n    <div className='tableDiv'>\n        <div className='aboveTable'>\n            <div className='tableTitle'>\n                Data Table\n            </div>\n            <div>\n                <label className='sort'>\n                Sort:\n                </label>\n                \n                <input type='text' defaultValue={order} className = 'sortInput' onChange = {(e) => orderChanger(e)}></input>\n            </div>\n        </div>\n       <table>\n            <thead>\n                <tr>\n                    <th>Atomic Number</th>\n                    <th>X - Coordinate</th>\n                    <th>Y - Coordinate</th>\n                    <th>Z - Coordinate</th>\n                    <th>Delete </th>\n                    <th> Add Back</th>\n                    {/* <th>Substitute </th> */}\n                </tr>\n            </thead>\n            <tbody>\n            {finalRows.map((element,indElem) => (\n                <tr key = {indElem}>\n                    {element[0].map((val,indVal) => (\n                        <td key = {indVal}  className = {selectedPoint === element[1]?'focusedData':removedData.includes(element[1])?'redSelected':''} onClick = {(numberData) => dataClicked(element[1])}>\n                            {indVal === 0? val:val.toFixed(10)}\n                        </td>\n                    ))}\n                     <td className = {selectedPoint === element[1]?'focusedData':removedData.includes(element[1])?'redSelected':''}>\n                        <button name = {`${element[1]}`} className='remove' onClick={onRemoveData}>Remove</button>  \n                    </td>\n                    <td className = {selectedPoint === element[1]?'focusedData':removedData.includes(element[1])?'redSelected':''}>\n                        <button name = {`${element[1]}`} className='add' onClick={onAddData}>Add</button>  \n                    </td>\n                    {/* <td className = {selectedPoint === element[1]?'focusedData':removedData.includes(element[1])?'redSelected':''}>\n                        <button name = {`${element[1]}`} className='replace' onClick={onRemoveData}>Replace</button>  \n                    </td> */}\n                </tr>\n            ))}\n               \n            </tbody>\n        </table>\n        <button className='download' onClick = {downloadXSF} >Download XSF</button>\n        <button className='download' onClick = {downloadSpecies} >Download Species</button>\n        \n    </div>\n  )\n}\n\nexport default DataPoints"]},"metadata":{},"sourceType":"module"}