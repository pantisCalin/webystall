{"ast":null,"code":"var _jsxFileName = \"/home/pantis/Documents/webystall/src/components/Structure.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useEffect } from \"react\";\nimport \"./Structure.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Structure = _ref => {\n  _s();\n\n  let {\n    stretches,\n    matrixMultiplication,\n    removedData,\n    selectedPoint,\n    species,\n    state,\n    angles,\n    changeOnListener,\n    releaseClick,\n    performClick,\n    visualDistance,\n    zoomInOut,\n    allMultiSpec,\n    dataX,\n    dataY,\n    dataZ\n  } = _ref;\n  const colors = [\"#0cc202\", \"#092d5d\", \"#0c808c\", \"#069bcf\", \"#0031d3\", \"#0223b8\", \"#04d318\", \"#01a383\", \"#0662cb\", \"#0584a1\", \"#0c51c0\", \"#0dee70\", \"#0e2d9e\", \"#0790ae\", \"#0b602d\", \"#0c9ea0\", \"#072938\", \"#086696\", \"#09d986\", \"#0737b8\", \"#0a4094\", \"#06813a\", \"#0d8be6\", \"#03cd6e\", \"#019508\", \"#0d0dd3\", \"#081db8\", \"#0d3a87\", \"#08e56b\", \"#03aebd\", \"#007f05\", \"#0a05b9\", \"#0ab740\", \"#01eb99\", \"#0089f6\", \"#085e0f\", \"#07a0f4\", \"#05b2cc\", \"#0293a7\", \"#0c7e6a\", \"#0ae78c\", \"#0afa6e\", \"#03c3de\", \"#0778d5\", \"#02503a\", \"#0de639\", \"#0175e3\", \"#099b88\", \"#0c3b6e\", \"#087132\", \"#026a65\", \"#033b21\", \"#0e7e49\", \"#09e4b3\", \"#0046f9\", \"#0d5a6f\", \"#02965a\", \"#0686f9\", \"#08a1f4\", \"#050b34\", \"#0983af\", \"#0e20b8\", \"#0a5ab4\", \"#0c671b\", \"#0b1026\", \"#078049\", \"#0d668c\", \"#05753a\", \"#0abfcf\", \"#075989\", \"#02a87d\", \"#0dd1cc\", \"#06bb46\", \"#0c5ea8\", \"#09750b\", \"#08b0e3\", \"#0e0c93\", \"#04b0e7\", \"#0a434c\", \"#0b7854\", \"#01afba\", \"#0c134e\", \"#072783\", \"#00dcd6\", \"#0e257f\", \"#02145f\", \"#0b1396\", \"#0bbc51\", \"#0be1c7\", \"#0a7a12\", \"#0bfa29\", \"#06ad45\", \"#04efb7\", \"#075684\", \"#03d3f6\", \"#09745f\", \"#07f9b2\", \"#0515c4\", \"#024522\", \"#09702d\", \"#0355eb\", \"#0b5c3a\", \"#074907\", \"#0833a5\", \"#05411f\", \"#0758af\", \"#094c70\", \"#01ca27\", \"#0ea7a5\", \"#072371\", \"#0d9ee3\", \"#03d90f\", \"#03ce85\", \"#0b6186\", \"#05499c\", \"#099f3d\", \"#088c0f\", \"#0807c2\", \"#0b0cbd\", \"#003ba5\"];\n  const atomDimensions = \"0.53\t0.31\t1.67\t1.12\t0.87\t0.67\t0.56\t0.48\t0.42\t0.38\t1.9\t1.45\t1.18\t1.11\t0.98\t0.88\t0.79\t0.71\t2.43\t1.94\t1.84\t1.76\t1.71\t1.66\t1.61\t1.56\t1.52\t1.49\t1.45\t1.42\t1.36\t1.25\t1.14\t1.03\t0.94\t0.88\t2.65\t2.19\t2.12\t2.06\t1.98\t1.9\t1.83\t1.78\t1.73\t1.69\t1.65\t1.61\t1.56\t1.45\t1.33\t1.23\t1.15\t1.08\t2.98\t2.53\t1.95\t1.85\t2.47\t2.06\t2.05\t2.38\t2.31\t2.33\t2.25\t2.28\t2.26\t2.26\t2.22\t2.22\t2.17\t2.08\t2\t1.93\t1.88\t1.85\t1.8\t1.77\t1.74\t1.71\t1.56\t1.54\t1.43\t1.35\t1.27\t1.2\t\t\t1.95\t1.8\t1.8\t1.75\t1.75\t1.75\t1.75\".split(\"\\t\");\n  let heightCanvas = 800;\n  let widthCanvas = 800;\n  let minimumOfXAxis = -visualDistance;\n  let minimumOfYAxis = -visualDistance;\n  let maximumOfXAxis = visualDistance;\n  let maximumOfYAxis = visualDistance;\n\n  const xyPosition = coordinates => {\n    const canvasXCoordinate = (coordinates[0] - minimumOfXAxis) * widthCanvas / (maximumOfXAxis - minimumOfXAxis);\n    const canvasYCoordinate = heightCanvas - (coordinates[1] - minimumOfYAxis) * heightCanvas / (maximumOfYAxis - minimumOfYAxis);\n    return [canvasXCoordinate, canvasYCoordinate];\n  };\n\n  const projectionFunction = coordinates => {\n    let Rx = [[1, 0, 0], [0, Math.cos(angles[1] * Math.PI / 180), -Math.sin(angles[1] * Math.PI / 180)], [0, Math.sin(angles[1] * Math.PI / 180), Math.cos(angles[1] * Math.PI / 180)]];\n    let Rz = [[Math.cos(angles[0] * Math.PI / 180), -Math.sin(angles[0] * Math.PI / 180), 0], [Math.sin(angles[0] * Math.PI / 180), Math.cos(angles[0] * Math.PI / 180), 0], [0, 0, 1]];\n    let vector = [];\n    coordinates.forEach(element => {\n      vector.push([element]);\n    });\n    let resultant = matrixMultiplication(Rz, Rx);\n    let [xReturn, yReturn, zReturn] = matrixMultiplication(resultant, vector)[0];\n    return [xReturn, yReturn, zReturn];\n  };\n\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    canvas.width = widthCanvas;\n    canvas.height = heightCanvas;\n\n    if (state.showAxis) {\n      ctx.lineWidth = 2;\n      let center = xyPosition(projectionFunction([0, 0, 0]));\n      let pointsAxis = [[visualDistance / 1.6, 0, 0], [0, visualDistance / 1.6, 0], [0, 0, visualDistance / 1.6]];\n      ctx.beginPath();\n      pointsAxis.forEach(element => {\n        let pCor = xyPosition(projectionFunction(element));\n        ctx.moveTo(center[0], center[1]);\n        ctx.lineTo(pCor[0], pCor[1]);\n        ctx.stroke();\n      });\n    }\n\n    let transposeMatrix = [];\n\n    for (let tr = 0; tr < dataX.length; tr++) {\n      let onProjectionData = projectionFunction([dataX[tr], dataY[tr], dataZ[tr]]);\n      transposeMatrix = [...transposeMatrix, [onProjectionData, allMultiSpec[tr], tr]];\n    }\n\n    let sortedPoints = transposeMatrix.sort((a, b) => {\n      return b[0][2] - a[0][2];\n    });\n\n    for (let i = 0; i < dataX.length; i++) {\n      if (removedData.includes(sortedPoints[i][2])) {\n        continue;\n      } else {\n        let canvasCoordinates = xyPosition(sortedPoints[i][0]);\n        let atomDimension = 1;\n\n        if (sortedPoints[i][2] === selectedPoint) {\n          atomDimension = 300 * atomDimensions[parseInt(sortedPoints[i][1])];\n        } else {\n          atomDimension = 200 * atomDimensions[parseInt(sortedPoints[i][1])];\n        }\n\n        let atomRadius = atomDimension / visualDistance || 2;\n        let grd = ctx.createRadialGradient(canvasCoordinates[0], canvasCoordinates[1], atomRadius / 1, canvasCoordinates[0] + atomRadius / 2, canvasCoordinates[1] - atomRadius / 2, atomRadius / 1000);\n        grd.addColorStop(1, \"wheat\");\n\n        if (sortedPoints[i][2] === selectedPoint) {\n          grd.addColorStop(0, \"black\");\n        } else {\n          let currentColor = colors[parseInt(sortedPoints[i][1])] || \"blue\";\n          grd.addColorStop(0, currentColor);\n        }\n\n        ctx.fillStyle = grd;\n        ctx.lineWidth = 10 / visualDistance;\n        ctx.strokeStyle = \"black\";\n        ctx.beginPath();\n        ctx.arc(canvasCoordinates[0], canvasCoordinates[1], atomRadius, 0, 10 * Math.PI);\n        ctx.fill();\n\n        for (let j = i; j < dataX.length; j++) {\n          if (removedData.includes(sortedPoints[j][2])) {\n            continue;\n          } else {\n            let realDistance = Math.sqrt((sortedPoints[i][0][0] - sortedPoints[j][0][0]) ** 2 + (sortedPoints[i][0][1] - sortedPoints[j][0][1]) ** 2 + (sortedPoints[i][0][2] - sortedPoints[j][0][2]) ** 2);\n\n            if (realDistance < state.maxBound) {\n              ctx.lineWidth = 100 / visualDistance;\n              let projectedPoint = xyPosition(sortedPoints[j][0]);\n              ctx.beginPath();\n              ctx.lineCap = \"round\";\n              ctx.strokeStyle = ctx.fillStyle;\n              ctx.moveTo(canvasCoordinates[0], canvasCoordinates[1]);\n\n              if (sortedPoints[i][1] !== sortedPoints[j][1]) {\n                let theHalf = xyPosition([(sortedPoints[i][0][0] + sortedPoints[j][0][0]) / 2, (sortedPoints[i][0][1] + sortedPoints[j][0][1]) / 2, (sortedPoints[i][0][2] + sortedPoints[j][0][2]) / 2]);\n                ctx.lineTo(theHalf[0], theHalf[1]);\n                ctx.stroke();\n                ctx.beginPath();\n\n                if (sortedPoints[j][2] === selectedPoint) {\n                  ctx.strokeStyle = \"black\";\n                } else {\n                  let currentColor = colors[parseInt(sortedPoints[j][1])] || \"blue\";\n                  ctx.strokeStyle = currentColor;\n                }\n\n                ctx.moveTo(theHalf[0], theHalf[1]);\n              }\n\n              ctx.lineTo(projectedPoint[0], projectedPoint[1]);\n              ctx.stroke();\n            }\n          }\n        }\n      }\n    }\n  }, [species, angles, visualDistance, state, dataX, selectedPoint, removedData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"canvasDiv\",\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      onMouseDown: performClick,\n      onMouseMove: changeOnListener,\n      onMouseUp: releaseClick,\n      onWheel: zoomInOut\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 341,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Structure, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n\n_c = Structure;\nexport default Structure;\n\nvar _c;\n\n$RefreshReg$(_c, \"Structure\");","map":{"version":3,"sources":["/home/pantis/Documents/webystall/src/components/Structure.js"],"names":["useRef","useEffect","Structure","stretches","matrixMultiplication","removedData","selectedPoint","species","state","angles","changeOnListener","releaseClick","performClick","visualDistance","zoomInOut","allMultiSpec","dataX","dataY","dataZ","colors","atomDimensions","split","heightCanvas","widthCanvas","minimumOfXAxis","minimumOfYAxis","maximumOfXAxis","maximumOfYAxis","xyPosition","coordinates","canvasXCoordinate","canvasYCoordinate","projectionFunction","Rx","Math","cos","PI","sin","Rz","vector","forEach","element","push","resultant","xReturn","yReturn","zReturn","canvasRef","canvas","current","ctx","getContext","width","height","showAxis","lineWidth","center","pointsAxis","beginPath","pCor","moveTo","lineTo","stroke","transposeMatrix","tr","length","onProjectionData","sortedPoints","sort","a","b","i","includes","canvasCoordinates","atomDimension","parseInt","atomRadius","grd","createRadialGradient","addColorStop","currentColor","fillStyle","strokeStyle","arc","fill","j","realDistance","sqrt","maxBound","projectedPoint","lineCap","theHalf"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,SAAjB,QAAkC,OAAlC;AACA,OAAO,iBAAP;;;AAEA,MAAMC,SAAS,GAAG,QAiBZ;AAAA;;AAAA,MAjBa;AACjBC,IAAAA,SADiB;AAEjBC,IAAAA,oBAFiB;AAGjBC,IAAAA,WAHiB;AAIjBC,IAAAA,aAJiB;AAKjBC,IAAAA,OALiB;AAMjBC,IAAAA,KANiB;AAOjBC,IAAAA,MAPiB;AAQjBC,IAAAA,gBARiB;AASjBC,IAAAA,YATiB;AAUjBC,IAAAA,YAViB;AAWjBC,IAAAA,cAXiB;AAYjBC,IAAAA,SAZiB;AAajBC,IAAAA,YAbiB;AAcjBC,IAAAA,KAdiB;AAejBC,IAAAA,KAfiB;AAgBjBC,IAAAA;AAhBiB,GAiBb;AACJ,QAAMC,MAAM,GAAG,CACb,SADa,EAEb,SAFa,EAGb,SAHa,EAIb,SAJa,EAKb,SALa,EAMb,SANa,EAOb,SAPa,EAQb,SARa,EASb,SATa,EAUb,SAVa,EAWb,SAXa,EAYb,SAZa,EAab,SAba,EAcb,SAda,EAeb,SAfa,EAgBb,SAhBa,EAiBb,SAjBa,EAkBb,SAlBa,EAmBb,SAnBa,EAoBb,SApBa,EAqBb,SArBa,EAsBb,SAtBa,EAuBb,SAvBa,EAwBb,SAxBa,EAyBb,SAzBa,EA0Bb,SA1Ba,EA2Bb,SA3Ba,EA4Bb,SA5Ba,EA6Bb,SA7Ba,EA8Bb,SA9Ba,EA+Bb,SA/Ba,EAgCb,SAhCa,EAiCb,SAjCa,EAkCb,SAlCa,EAmCb,SAnCa,EAoCb,SApCa,EAqCb,SArCa,EAsCb,SAtCa,EAuCb,SAvCa,EAwCb,SAxCa,EAyCb,SAzCa,EA0Cb,SA1Ca,EA2Cb,SA3Ca,EA4Cb,SA5Ca,EA6Cb,SA7Ca,EA8Cb,SA9Ca,EA+Cb,SA/Ca,EAgDb,SAhDa,EAiDb,SAjDa,EAkDb,SAlDa,EAmDb,SAnDa,EAoDb,SApDa,EAqDb,SArDa,EAsDb,SAtDa,EAuDb,SAvDa,EAwDb,SAxDa,EAyDb,SAzDa,EA0Db,SA1Da,EA2Db,SA3Da,EA4Db,SA5Da,EA6Db,SA7Da,EA8Db,SA9Da,EA+Db,SA/Da,EAgEb,SAhEa,EAiEb,SAjEa,EAkEb,SAlEa,EAmEb,SAnEa,EAoEb,SApEa,EAqEb,SArEa,EAsEb,SAtEa,EAuEb,SAvEa,EAwEb,SAxEa,EAyEb,SAzEa,EA0Eb,SA1Ea,EA2Eb,SA3Ea,EA4Eb,SA5Ea,EA6Eb,SA7Ea,EA8Eb,SA9Ea,EA+Eb,SA/Ea,EAgFb,SAhFa,EAiFb,SAjFa,EAkFb,SAlFa,EAmFb,SAnFa,EAoFb,SApFa,EAqFb,SArFa,EAsFb,SAtFa,EAuFb,SAvFa,EAwFb,SAxFa,EAyFb,SAzFa,EA0Fb,SA1Fa,EA2Fb,SA3Fa,EA4Fb,SA5Fa,EA6Fb,SA7Fa,EA8Fb,SA9Fa,EA+Fb,SA/Fa,EAgGb,SAhGa,EAiGb,SAjGa,EAkGb,SAlGa,EAmGb,SAnGa,EAoGb,SApGa,EAqGb,SArGa,EAsGb,SAtGa,EAuGb,SAvGa,EAwGb,SAxGa,EAyGb,SAzGa,EA0Gb,SA1Ga,EA2Gb,SA3Ga,EA4Gb,SA5Ga,EA6Gb,SA7Ga,EA8Gb,SA9Ga,EA+Gb,SA/Ga,EAgHb,SAhHa,EAiHb,SAjHa,EAkHb,SAlHa,EAmHb,SAnHa,EAoHb,SApHa,EAqHb,SArHa,EAsHb,SAtHa,EAuHb,SAvHa,EAwHb,SAxHa,CAAf;AA0HA,QAAMC,cAAc,GAClB,4cAA4cC,KAA5c,CACE,IADF,CADF;AAIA,MAAIC,YAAY,GAAG,GAAnB;AACA,MAAIC,WAAW,GAAG,GAAlB;AACA,MAAIC,cAAc,GAAG,CAACX,cAAtB;AACA,MAAIY,cAAc,GAAG,CAACZ,cAAtB;AACA,MAAIa,cAAc,GAAGb,cAArB;AACA,MAAIc,cAAc,GAAGd,cAArB;;AAEA,QAAMe,UAAU,GAAIC,WAAD,IAAiB;AAClC,UAAMC,iBAAiB,GACpB,CAACD,WAAW,CAAC,CAAD,CAAX,GAAiBL,cAAlB,IAAoCD,WAArC,IACCG,cAAc,GAAGF,cADlB,CADF;AAGA,UAAMO,iBAAiB,GACrBT,YAAY,GACX,CAACO,WAAW,CAAC,CAAD,CAAX,GAAiBJ,cAAlB,IAAoCH,YAArC,IACGK,cAAc,GAAGF,cADpB,CAFF;AAIA,WAAO,CAACK,iBAAD,EAAoBC,iBAApB,CAAP;AACD,GATD;;AAWA,QAAMC,kBAAkB,GAAIH,WAAD,IAAiB;AAC1C,QAAII,EAAE,GAAG,CACP,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADO,EAEP,CACE,CADF,EAEEC,IAAI,CAACC,GAAL,CAAU1B,MAAM,CAAC,CAAD,CAAN,GAAYyB,IAAI,CAACE,EAAlB,GAAwB,GAAjC,CAFF,EAGE,CAACF,IAAI,CAACG,GAAL,CAAU5B,MAAM,CAAC,CAAD,CAAN,GAAYyB,IAAI,CAACE,EAAlB,GAAwB,GAAjC,CAHH,CAFO,EAOP,CACE,CADF,EAEEF,IAAI,CAACG,GAAL,CAAU5B,MAAM,CAAC,CAAD,CAAN,GAAYyB,IAAI,CAACE,EAAlB,GAAwB,GAAjC,CAFF,EAGEF,IAAI,CAACC,GAAL,CAAU1B,MAAM,CAAC,CAAD,CAAN,GAAYyB,IAAI,CAACE,EAAlB,GAAwB,GAAjC,CAHF,CAPO,CAAT;AAaA,QAAIE,EAAE,GAAG,CACP,CACEJ,IAAI,CAACC,GAAL,CAAU1B,MAAM,CAAC,CAAD,CAAN,GAAYyB,IAAI,CAACE,EAAlB,GAAwB,GAAjC,CADF,EAEE,CAACF,IAAI,CAACG,GAAL,CAAU5B,MAAM,CAAC,CAAD,CAAN,GAAYyB,IAAI,CAACE,EAAlB,GAAwB,GAAjC,CAFH,EAGE,CAHF,CADO,EAMP,CACEF,IAAI,CAACG,GAAL,CAAU5B,MAAM,CAAC,CAAD,CAAN,GAAYyB,IAAI,CAACE,EAAlB,GAAwB,GAAjC,CADF,EAEEF,IAAI,CAACC,GAAL,CAAU1B,MAAM,CAAC,CAAD,CAAN,GAAYyB,IAAI,CAACE,EAAlB,GAAwB,GAAjC,CAFF,EAGE,CAHF,CANO,EAWP,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAXO,CAAT;AAcA,QAAIG,MAAM,GAAG,EAAb;AACAV,IAAAA,WAAW,CAACW,OAAZ,CAAqBC,OAAD,IAAa;AAC/BF,MAAAA,MAAM,CAACG,IAAP,CAAY,CAACD,OAAD,CAAZ;AACD,KAFD;AAGA,QAAIE,SAAS,GAAGvC,oBAAoB,CAACkC,EAAD,EAAKL,EAAL,CAApC;AACA,QAAI,CAACW,OAAD,EAAUC,OAAV,EAAmBC,OAAnB,IAA8B1C,oBAAoB,CACpDuC,SADoD,EAEpDJ,MAFoD,CAApB,CAGhC,CAHgC,CAAlC;AAIA,WAAO,CAACK,OAAD,EAAUC,OAAV,EAAmBC,OAAnB,CAAP;AACD,GAtCD;;AAwCA,QAAMC,SAAS,GAAG/C,MAAM,CAAC,IAAD,CAAxB;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM+C,MAAM,GAAGD,SAAS,CAACE,OAAzB;AACA,UAAMC,GAAG,GAAGF,MAAM,CAACG,UAAP,CAAkB,IAAlB,CAAZ;AACAH,IAAAA,MAAM,CAACI,KAAP,GAAe7B,WAAf;AACAyB,IAAAA,MAAM,CAACK,MAAP,GAAgB/B,YAAhB;;AACA,QAAId,KAAK,CAAC8C,QAAV,EAAoB;AAClBJ,MAAAA,GAAG,CAACK,SAAJ,GAAgB,CAAhB;AACA,UAAIC,MAAM,GAAG5B,UAAU,CAACI,kBAAkB,CAAC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAD,CAAnB,CAAvB;AACA,UAAIyB,UAAU,GAAG,CACf,CAAC5C,cAAc,GAAG,GAAlB,EAAuB,CAAvB,EAA0B,CAA1B,CADe,EAEf,CAAC,CAAD,EAAIA,cAAc,GAAG,GAArB,EAA0B,CAA1B,CAFe,EAGf,CAAC,CAAD,EAAI,CAAJ,EAAOA,cAAc,GAAG,GAAxB,CAHe,CAAjB;AAKAqC,MAAAA,GAAG,CAACQ,SAAJ;AACAD,MAAAA,UAAU,CAACjB,OAAX,CAAoBC,OAAD,IAAa;AAC9B,YAAIkB,IAAI,GAAG/B,UAAU,CAACI,kBAAkB,CAACS,OAAD,CAAnB,CAArB;AACAS,QAAAA,GAAG,CAACU,MAAJ,CAAWJ,MAAM,CAAC,CAAD,CAAjB,EAAsBA,MAAM,CAAC,CAAD,CAA5B;AACAN,QAAAA,GAAG,CAACW,MAAJ,CAAWF,IAAI,CAAC,CAAD,CAAf,EAAoBA,IAAI,CAAC,CAAD,CAAxB;AACAT,QAAAA,GAAG,CAACY,MAAJ;AACD,OALD;AAMD;;AACD,QAAIC,eAAe,GAAG,EAAtB;;AACA,SAAK,IAAIC,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGhD,KAAK,CAACiD,MAA5B,EAAoCD,EAAE,EAAtC,EAA0C;AACxC,UAAIE,gBAAgB,GAAGlC,kBAAkB,CAAC,CACxChB,KAAK,CAACgD,EAAD,CADmC,EAExC/C,KAAK,CAAC+C,EAAD,CAFmC,EAGxC9C,KAAK,CAAC8C,EAAD,CAHmC,CAAD,CAAzC;AAKAD,MAAAA,eAAe,GAAG,CAChB,GAAGA,eADa,EAEhB,CAACG,gBAAD,EAAmBnD,YAAY,CAACiD,EAAD,CAA/B,EAAqCA,EAArC,CAFgB,CAAlB;AAID;;AACD,QAAIG,YAAY,GAAGJ,eAAe,CAACK,IAAhB,CAAqB,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAChD,aAAOA,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,IAAUD,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,CAAjB;AACD,KAFkB,CAAnB;;AAIA,SAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGvD,KAAK,CAACiD,MAA1B,EAAkCM,CAAC,EAAnC,EAAuC;AACrC,UAAIlE,WAAW,CAACmE,QAAZ,CAAqBL,YAAY,CAACI,CAAD,CAAZ,CAAgB,CAAhB,CAArB,CAAJ,EAA8C;AAC5C;AACD,OAFD,MAEO;AACL,YAAIE,iBAAiB,GAAG7C,UAAU,CAACuC,YAAY,CAACI,CAAD,CAAZ,CAAgB,CAAhB,CAAD,CAAlC;AACA,YAAIG,aAAa,GAAG,CAApB;;AAEA,YAAIP,YAAY,CAACI,CAAD,CAAZ,CAAgB,CAAhB,MAAuBjE,aAA3B,EAA0C;AACxCoE,UAAAA,aAAa,GAAG,MAAMtD,cAAc,CAACuD,QAAQ,CAACR,YAAY,CAACI,CAAD,CAAZ,CAAgB,CAAhB,CAAD,CAAT,CAApC;AACD,SAFD,MAEO;AACLG,UAAAA,aAAa,GAAG,MAAMtD,cAAc,CAACuD,QAAQ,CAACR,YAAY,CAACI,CAAD,CAAZ,CAAgB,CAAhB,CAAD,CAAT,CAApC;AACD;;AAED,YAAIK,UAAU,GAAGF,aAAa,GAAG7D,cAAhB,IAAkC,CAAnD;AACA,YAAIgE,GAAG,GAAG3B,GAAG,CAAC4B,oBAAJ,CACRL,iBAAiB,CAAC,CAAD,CADT,EAERA,iBAAiB,CAAC,CAAD,CAFT,EAGRG,UAAU,GAAG,CAHL,EAIRH,iBAAiB,CAAC,CAAD,CAAjB,GAAuBG,UAAU,GAAG,CAJ5B,EAKRH,iBAAiB,CAAC,CAAD,CAAjB,GAAuBG,UAAU,GAAG,CAL5B,EAMRA,UAAU,GAAG,IANL,CAAV;AASAC,QAAAA,GAAG,CAACE,YAAJ,CAAiB,CAAjB,EAAoB,OAApB;;AAEA,YAAIZ,YAAY,CAACI,CAAD,CAAZ,CAAgB,CAAhB,MAAuBjE,aAA3B,EAA0C;AACxCuE,UAAAA,GAAG,CAACE,YAAJ,CAAiB,CAAjB,EAAoB,OAApB;AACD,SAFD,MAEO;AACL,cAAIC,YAAY,GAAG7D,MAAM,CAACwD,QAAQ,CAACR,YAAY,CAACI,CAAD,CAAZ,CAAgB,CAAhB,CAAD,CAAT,CAAN,IAAwC,MAA3D;AACAM,UAAAA,GAAG,CAACE,YAAJ,CAAiB,CAAjB,EAAoBC,YAApB;AACD;;AAED9B,QAAAA,GAAG,CAAC+B,SAAJ,GAAgBJ,GAAhB;AACA3B,QAAAA,GAAG,CAACK,SAAJ,GAAgB,KAAK1C,cAArB;AACAqC,QAAAA,GAAG,CAACgC,WAAJ,GAAkB,OAAlB;AACAhC,QAAAA,GAAG,CAACQ,SAAJ;AACAR,QAAAA,GAAG,CAACiC,GAAJ,CACEV,iBAAiB,CAAC,CAAD,CADnB,EAEEA,iBAAiB,CAAC,CAAD,CAFnB,EAGEG,UAHF,EAIE,CAJF,EAKE,KAAK1C,IAAI,CAACE,EALZ;AAOAc,QAAAA,GAAG,CAACkC,IAAJ;;AAEA,aAAK,IAAIC,CAAC,GAAGd,CAAb,EAAgBc,CAAC,GAAGrE,KAAK,CAACiD,MAA1B,EAAkCoB,CAAC,EAAnC,EAAuC;AACrC,cAAIhF,WAAW,CAACmE,QAAZ,CAAqBL,YAAY,CAACkB,CAAD,CAAZ,CAAgB,CAAhB,CAArB,CAAJ,EAA8C;AAC5C;AACD,WAFD,MAEO;AACL,gBAAIC,YAAY,GAAGpD,IAAI,CAACqD,IAAL,CACjB,CAACpB,YAAY,CAACI,CAAD,CAAZ,CAAgB,CAAhB,EAAmB,CAAnB,IAAwBJ,YAAY,CAACkB,CAAD,CAAZ,CAAgB,CAAhB,EAAmB,CAAnB,CAAzB,KAAmD,CAAnD,GACE,CAAClB,YAAY,CAACI,CAAD,CAAZ,CAAgB,CAAhB,EAAmB,CAAnB,IAAwBJ,YAAY,CAACkB,CAAD,CAAZ,CAAgB,CAAhB,EAAmB,CAAnB,CAAzB,KAAmD,CADrD,GAEE,CAAClB,YAAY,CAACI,CAAD,CAAZ,CAAgB,CAAhB,EAAmB,CAAnB,IAAwBJ,YAAY,CAACkB,CAAD,CAAZ,CAAgB,CAAhB,EAAmB,CAAnB,CAAzB,KAAmD,CAHpC,CAAnB;;AAKA,gBAAIC,YAAY,GAAG9E,KAAK,CAACgF,QAAzB,EAAmC;AACjCtC,cAAAA,GAAG,CAACK,SAAJ,GAAgB,MAAM1C,cAAtB;AACA,kBAAI4E,cAAc,GAAG7D,UAAU,CAACuC,YAAY,CAACkB,CAAD,CAAZ,CAAgB,CAAhB,CAAD,CAA/B;AACAnC,cAAAA,GAAG,CAACQ,SAAJ;AACAR,cAAAA,GAAG,CAACwC,OAAJ,GAAc,OAAd;AACAxC,cAAAA,GAAG,CAACgC,WAAJ,GAAkBhC,GAAG,CAAC+B,SAAtB;AACA/B,cAAAA,GAAG,CAACU,MAAJ,CAAWa,iBAAiB,CAAC,CAAD,CAA5B,EAAiCA,iBAAiB,CAAC,CAAD,CAAlD;;AAEA,kBAAIN,YAAY,CAACI,CAAD,CAAZ,CAAgB,CAAhB,MAAuBJ,YAAY,CAACkB,CAAD,CAAZ,CAAgB,CAAhB,CAA3B,EAA+C;AAC7C,oBAAIM,OAAO,GAAG/D,UAAU,CAAC,CACvB,CAACuC,YAAY,CAACI,CAAD,CAAZ,CAAgB,CAAhB,EAAmB,CAAnB,IAAwBJ,YAAY,CAACkB,CAAD,CAAZ,CAAgB,CAAhB,EAAmB,CAAnB,CAAzB,IAAkD,CAD3B,EAEvB,CAAClB,YAAY,CAACI,CAAD,CAAZ,CAAgB,CAAhB,EAAmB,CAAnB,IAAwBJ,YAAY,CAACkB,CAAD,CAAZ,CAAgB,CAAhB,EAAmB,CAAnB,CAAzB,IAAkD,CAF3B,EAGvB,CAAClB,YAAY,CAACI,CAAD,CAAZ,CAAgB,CAAhB,EAAmB,CAAnB,IAAwBJ,YAAY,CAACkB,CAAD,CAAZ,CAAgB,CAAhB,EAAmB,CAAnB,CAAzB,IAAkD,CAH3B,CAAD,CAAxB;AAKAnC,gBAAAA,GAAG,CAACW,MAAJ,CAAW8B,OAAO,CAAC,CAAD,CAAlB,EAAuBA,OAAO,CAAC,CAAD,CAA9B;AACAzC,gBAAAA,GAAG,CAACY,MAAJ;AACAZ,gBAAAA,GAAG,CAACQ,SAAJ;;AACA,oBAAIS,YAAY,CAACkB,CAAD,CAAZ,CAAgB,CAAhB,MAAuB/E,aAA3B,EAA0C;AACxC4C,kBAAAA,GAAG,CAACgC,WAAJ,GAAkB,OAAlB;AACD,iBAFD,MAEO;AACL,sBAAIF,YAAY,GACd7D,MAAM,CAACwD,QAAQ,CAACR,YAAY,CAACkB,CAAD,CAAZ,CAAgB,CAAhB,CAAD,CAAT,CAAN,IAAwC,MAD1C;AAEAnC,kBAAAA,GAAG,CAACgC,WAAJ,GAAkBF,YAAlB;AACD;;AACD9B,gBAAAA,GAAG,CAACU,MAAJ,CAAW+B,OAAO,CAAC,CAAD,CAAlB,EAAuBA,OAAO,CAAC,CAAD,CAA9B;AACD;;AACDzC,cAAAA,GAAG,CAACW,MAAJ,CAAW4B,cAAc,CAAC,CAAD,CAAzB,EAA8BA,cAAc,CAAC,CAAD,CAA5C;AACAvC,cAAAA,GAAG,CAACY,MAAJ;AACD;AACF;AACF;AACF;AACF;AACF,GA5HQ,EA4HN,CACDvD,OADC,EAEDE,MAFC,EAGDI,cAHC,EAIDL,KAJC,EAKDQ,KALC,EAMDV,aANC,EAODD,WAPC,CA5HM,CAAT;AAqIA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACE;AACE,MAAA,GAAG,EAAE0C,SADP;AAEE,MAAA,WAAW,EAAEnC,YAFf;AAGE,MAAA,WAAW,EAAEF,gBAHf;AAIE,MAAA,SAAS,EAAEC,YAJb;AAKE,MAAA,OAAO,EAAEG;AALX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CA3VD;;GAAMZ,S;;KAAAA,S;AA6VN,eAAeA,SAAf","sourcesContent":["import { useRef, useEffect } from \"react\";\nimport \"./Structure.css\";\n\nconst Structure = ({\n  stretches,\n  matrixMultiplication,\n  removedData,\n  selectedPoint,\n  species,\n  state,\n  angles,\n  changeOnListener,\n  releaseClick,\n  performClick,\n  visualDistance,\n  zoomInOut,\n  allMultiSpec,\n  dataX,\n  dataY,\n  dataZ,\n}) => {\n  const colors = [\n    \"#0cc202\",\n    \"#092d5d\",\n    \"#0c808c\",\n    \"#069bcf\",\n    \"#0031d3\",\n    \"#0223b8\",\n    \"#04d318\",\n    \"#01a383\",\n    \"#0662cb\",\n    \"#0584a1\",\n    \"#0c51c0\",\n    \"#0dee70\",\n    \"#0e2d9e\",\n    \"#0790ae\",\n    \"#0b602d\",\n    \"#0c9ea0\",\n    \"#072938\",\n    \"#086696\",\n    \"#09d986\",\n    \"#0737b8\",\n    \"#0a4094\",\n    \"#06813a\",\n    \"#0d8be6\",\n    \"#03cd6e\",\n    \"#019508\",\n    \"#0d0dd3\",\n    \"#081db8\",\n    \"#0d3a87\",\n    \"#08e56b\",\n    \"#03aebd\",\n    \"#007f05\",\n    \"#0a05b9\",\n    \"#0ab740\",\n    \"#01eb99\",\n    \"#0089f6\",\n    \"#085e0f\",\n    \"#07a0f4\",\n    \"#05b2cc\",\n    \"#0293a7\",\n    \"#0c7e6a\",\n    \"#0ae78c\",\n    \"#0afa6e\",\n    \"#03c3de\",\n    \"#0778d5\",\n    \"#02503a\",\n    \"#0de639\",\n    \"#0175e3\",\n    \"#099b88\",\n    \"#0c3b6e\",\n    \"#087132\",\n    \"#026a65\",\n    \"#033b21\",\n    \"#0e7e49\",\n    \"#09e4b3\",\n    \"#0046f9\",\n    \"#0d5a6f\",\n    \"#02965a\",\n    \"#0686f9\",\n    \"#08a1f4\",\n    \"#050b34\",\n    \"#0983af\",\n    \"#0e20b8\",\n    \"#0a5ab4\",\n    \"#0c671b\",\n    \"#0b1026\",\n    \"#078049\",\n    \"#0d668c\",\n    \"#05753a\",\n    \"#0abfcf\",\n    \"#075989\",\n    \"#02a87d\",\n    \"#0dd1cc\",\n    \"#06bb46\",\n    \"#0c5ea8\",\n    \"#09750b\",\n    \"#08b0e3\",\n    \"#0e0c93\",\n    \"#04b0e7\",\n    \"#0a434c\",\n    \"#0b7854\",\n    \"#01afba\",\n    \"#0c134e\",\n    \"#072783\",\n    \"#00dcd6\",\n    \"#0e257f\",\n    \"#02145f\",\n    \"#0b1396\",\n    \"#0bbc51\",\n    \"#0be1c7\",\n    \"#0a7a12\",\n    \"#0bfa29\",\n    \"#06ad45\",\n    \"#04efb7\",\n    \"#075684\",\n    \"#03d3f6\",\n    \"#09745f\",\n    \"#07f9b2\",\n    \"#0515c4\",\n    \"#024522\",\n    \"#09702d\",\n    \"#0355eb\",\n    \"#0b5c3a\",\n    \"#074907\",\n    \"#0833a5\",\n    \"#05411f\",\n    \"#0758af\",\n    \"#094c70\",\n    \"#01ca27\",\n    \"#0ea7a5\",\n    \"#072371\",\n    \"#0d9ee3\",\n    \"#03d90f\",\n    \"#03ce85\",\n    \"#0b6186\",\n    \"#05499c\",\n    \"#099f3d\",\n    \"#088c0f\",\n    \"#0807c2\",\n    \"#0b0cbd\",\n    \"#003ba5\",\n  ];\n  const atomDimensions =\n    \"0.53\t0.31\t1.67\t1.12\t0.87\t0.67\t0.56\t0.48\t0.42\t0.38\t1.9\t1.45\t1.18\t1.11\t0.98\t0.88\t0.79\t0.71\t2.43\t1.94\t1.84\t1.76\t1.71\t1.66\t1.61\t1.56\t1.52\t1.49\t1.45\t1.42\t1.36\t1.25\t1.14\t1.03\t0.94\t0.88\t2.65\t2.19\t2.12\t2.06\t1.98\t1.9\t1.83\t1.78\t1.73\t1.69\t1.65\t1.61\t1.56\t1.45\t1.33\t1.23\t1.15\t1.08\t2.98\t2.53\t1.95\t1.85\t2.47\t2.06\t2.05\t2.38\t2.31\t2.33\t2.25\t2.28\t2.26\t2.26\t2.22\t2.22\t2.17\t2.08\t2\t1.93\t1.88\t1.85\t1.8\t1.77\t1.74\t1.71\t1.56\t1.54\t1.43\t1.35\t1.27\t1.2\t\t\t1.95\t1.8\t1.8\t1.75\t1.75\t1.75\t1.75\".split(\n      \"\\t\"\n    );\n  let heightCanvas = 800;\n  let widthCanvas = 800;\n  let minimumOfXAxis = -visualDistance;\n  let minimumOfYAxis = -visualDistance;\n  let maximumOfXAxis = visualDistance;\n  let maximumOfYAxis = visualDistance;\n\n  const xyPosition = (coordinates) => {\n    const canvasXCoordinate =\n      ((coordinates[0] - minimumOfXAxis) * widthCanvas) /\n      (maximumOfXAxis - minimumOfXAxis);\n    const canvasYCoordinate =\n      heightCanvas -\n      ((coordinates[1] - minimumOfYAxis) * heightCanvas) /\n        (maximumOfYAxis - minimumOfYAxis);\n    return [canvasXCoordinate, canvasYCoordinate];\n  };\n\n  const projectionFunction = (coordinates) => {\n    let Rx = [\n      [1, 0, 0],\n      [\n        0,\n        Math.cos((angles[1] * Math.PI) / 180),\n        -Math.sin((angles[1] * Math.PI) / 180),\n      ],\n      [\n        0,\n        Math.sin((angles[1] * Math.PI) / 180),\n        Math.cos((angles[1] * Math.PI) / 180),\n      ],\n    ];\n    let Rz = [\n      [\n        Math.cos((angles[0] * Math.PI) / 180),\n        -Math.sin((angles[0] * Math.PI) / 180),\n        0,\n      ],\n      [\n        Math.sin((angles[0] * Math.PI) / 180),\n        Math.cos((angles[0] * Math.PI) / 180),\n        0,\n      ],\n      [0, 0, 1],\n    ];\n\n    let vector = [];\n    coordinates.forEach((element) => {\n      vector.push([element]);\n    });\n    let resultant = matrixMultiplication(Rz, Rx);\n    let [xReturn, yReturn, zReturn] = matrixMultiplication(\n      resultant,\n      vector\n    )[0];\n    return [xReturn, yReturn, zReturn];\n  };\n\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    canvas.width = widthCanvas;\n    canvas.height = heightCanvas;\n    if (state.showAxis) {\n      ctx.lineWidth = 2;\n      let center = xyPosition(projectionFunction([0, 0, 0]));\n      let pointsAxis = [\n        [visualDistance / 1.6, 0, 0],\n        [0, visualDistance / 1.6, 0],\n        [0, 0, visualDistance / 1.6],\n      ];\n      ctx.beginPath();\n      pointsAxis.forEach((element) => {\n        let pCor = xyPosition(projectionFunction(element));\n        ctx.moveTo(center[0], center[1]);\n        ctx.lineTo(pCor[0], pCor[1]);\n        ctx.stroke();\n      });\n    }\n    let transposeMatrix = [];\n    for (let tr = 0; tr < dataX.length; tr++) {\n      let onProjectionData = projectionFunction([\n        dataX[tr],\n        dataY[tr],\n        dataZ[tr],\n      ]);\n      transposeMatrix = [\n        ...transposeMatrix,\n        [onProjectionData, allMultiSpec[tr], tr],\n      ];\n    }\n    let sortedPoints = transposeMatrix.sort((a, b) => {\n      return b[0][2] - a[0][2];\n    });\n\n    for (let i = 0; i < dataX.length; i++) {\n      if (removedData.includes(sortedPoints[i][2])) {\n        continue;\n      } else {\n        let canvasCoordinates = xyPosition(sortedPoints[i][0]);\n        let atomDimension = 1;\n\n        if (sortedPoints[i][2] === selectedPoint) {\n          atomDimension = 300 * atomDimensions[parseInt(sortedPoints[i][1])];\n        } else {\n          atomDimension = 200 * atomDimensions[parseInt(sortedPoints[i][1])];\n        }\n\n        let atomRadius = atomDimension / visualDistance || 2;\n        let grd = ctx.createRadialGradient(\n          canvasCoordinates[0],\n          canvasCoordinates[1],\n          atomRadius / 1,\n          canvasCoordinates[0] + atomRadius / 2,\n          canvasCoordinates[1] - atomRadius / 2,\n          atomRadius / 1000\n        );\n\n        grd.addColorStop(1, \"wheat\");\n\n        if (sortedPoints[i][2] === selectedPoint) {\n          grd.addColorStop(0, \"black\");\n        } else {\n          let currentColor = colors[parseInt(sortedPoints[i][1])] || \"blue\";\n          grd.addColorStop(0, currentColor);\n        }\n\n        ctx.fillStyle = grd;\n        ctx.lineWidth = 10 / visualDistance;\n        ctx.strokeStyle = \"black\";\n        ctx.beginPath();\n        ctx.arc(\n          canvasCoordinates[0],\n          canvasCoordinates[1],\n          atomRadius,\n          0,\n          10 * Math.PI\n        );\n        ctx.fill();\n\n        for (let j = i; j < dataX.length; j++) {\n          if (removedData.includes(sortedPoints[j][2])) {\n            continue;\n          } else {\n            let realDistance = Math.sqrt(\n              (sortedPoints[i][0][0] - sortedPoints[j][0][0]) ** 2 +\n                (sortedPoints[i][0][1] - sortedPoints[j][0][1]) ** 2 +\n                (sortedPoints[i][0][2] - sortedPoints[j][0][2]) ** 2\n            );\n            if (realDistance < state.maxBound) {\n              ctx.lineWidth = 100 / visualDistance;\n              let projectedPoint = xyPosition(sortedPoints[j][0]);\n              ctx.beginPath();\n              ctx.lineCap = \"round\";\n              ctx.strokeStyle = ctx.fillStyle;\n              ctx.moveTo(canvasCoordinates[0], canvasCoordinates[1]);\n\n              if (sortedPoints[i][1] !== sortedPoints[j][1]) {\n                let theHalf = xyPosition([\n                  (sortedPoints[i][0][0] + sortedPoints[j][0][0]) / 2,\n                  (sortedPoints[i][0][1] + sortedPoints[j][0][1]) / 2,\n                  (sortedPoints[i][0][2] + sortedPoints[j][0][2]) / 2,\n                ]);\n                ctx.lineTo(theHalf[0], theHalf[1]);\n                ctx.stroke();\n                ctx.beginPath();\n                if (sortedPoints[j][2] === selectedPoint) {\n                  ctx.strokeStyle = \"black\";\n                } else {\n                  let currentColor =\n                    colors[parseInt(sortedPoints[j][1])] || \"blue\";\n                  ctx.strokeStyle = currentColor;\n                }\n                ctx.moveTo(theHalf[0], theHalf[1]);\n              }\n              ctx.lineTo(projectedPoint[0], projectedPoint[1]);\n              ctx.stroke();\n            }\n          }\n        }\n      }\n    }\n  }, [\n    species,\n    angles,\n    visualDistance,\n    state,\n    dataX,\n    selectedPoint,\n    removedData,\n  ]);\n  return (\n    <div className=\"canvasDiv\">\n      <canvas\n        ref={canvasRef}\n        onMouseDown={performClick}\n        onMouseMove={changeOnListener}\n        onMouseUp={releaseClick}\n        onWheel={zoomInOut}\n      />\n    </div>\n  );\n};\n\nexport default Structure;\n"]},"metadata":{},"sourceType":"module"}